import java.text.SimpleDateFormat

plugins {
  id 'java-library'

  //Performs quality checks on the project's Java source files using
  // SpotBugs (former FindBugs) and generates reports from these checks
  id 'com.github.spotbugs' version '2.0.0'

  // Plug-in that computes version information from the SCM.
  id 'net.nemerosa.versioning' version '2.6.1'

  // The Maven Publish Plugin provides the ability to publish build
  // artifacts to an Apache Maven repository.
  id 'maven-publish'

  //The Signing Plugin adds the ability to digitally sign built files and artifacts.
  id 'signing'

  // The `mdoclet` is a Doclet that allows the use of Markdown in JavaDoc.
  // note: `mdoclet` seems not to work with Java 11
  // https://github.com/mnlipp/jdrupes-mdoclet
  id 'org.jdrupes.mdoclet' version '1.0.5'
}

sourceCompatibility = 1.8

repositories {
  mavenCentral()
}

versioning {
  // Suppress some warnings from the nemerosa-versioning plugin.
  noWarningOnDirty = true
}


dependencies {

  // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
  //compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
  // https://mvnrepository.com/artifact/com.shankyank.jni/jni-loader
  implementation group: 'com.shankyank.jni', name: 'jni-loader', version: '0.1' // @Todo replace
  // https://mvnrepository.com/artifact/org.slf4j/slf4j-nop
  implementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.28' // @Todo remove

  testImplementation group: 'junit', name: 'junit', version: '4.12'
  testImplementation group: 'com.google.truth' ,name: 'truth', version: '1.0'
  testImplementation group: 'com.google.truth.extensions' ,name: 'truth-java8-extension', version: '1.0'


}

ext {
  headerDir = file("../linux/src/jni_headers")
}

compileJava {
  // JNI headers to be written to ../linux/src/jni_headers
  options.headerOutputDirectory = headerDir
}

clean {
  delete fileTree(headerDir) {
    include '**/*.h'
  }
}

test {
  // set JVM arguments for the test JVM(s)
  //jvmArgs "-verbose:jni", "-ea"
}


jar {

  archivesBaseName = rootProject.name
  archiveFileName = "${archivesBaseName}-${rootProject.version}.jar"

  manifest {
    attributes(
        'Implementation-Version': rootProject.version,
        'Git-Version': versioning.info.full,
        'Built-By': System.properties['user.name'],
        'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
        'Build-Revision': versioning.info.commit,
        'Created-By': "Gradle ${gradle.gradleVersion}",
        'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
        'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
    )
  }
}

task sourceJar(type: Jar) {
  classifier "sources"
  from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier "javadoc"
  from javadoc.destinationDir
}

artifacts {
  archives jar
  archives sourceJar
  archives javadocJar
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java

      artifactId = rootProject.name
      version =  rootProject.version

      artifact(sourceJar) {
        classifier = 'sources'
      }
      artifact(javadocJar) {
        classifier = 'javadoc'
      }

      pom {
        name = "${project.group}:${rootProject.name}"
        description = 'A thin JNI wrapper around the JACK-audio library on Linux.'
        url = 'https://free-creations.de/jackAudio4Java'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'harald-LB'
            name = 'Harald Postner'
            email = 'Harald@free-creations.de'
            url = 'https://www.free-creations.de/'
          }
        }

        scm {
          connection = 'scm:git:https://github.com/free-creations/jackAudio4Java.git'
          developerConnection = 'scm:git:ssh://github.com/free-creations/jackAudio4Java.git'
          url = 'https://github.com/free-creations/jackAudio4Java'
        }
        issueManagement {
          system = 'GitHub'
          url = 'https://github.com/free-creations/jackAudio4Java/issues'
        }
      }

    }
  }

  repositories {

    maven {
      name = 'snapshots'
      url 'https://oss.sonatype.org/content/repositories/snapshots'
      credentials {
        username sonatypeUsername
        password sonatypePassword
      }
    }
  }
}



signing {
  sign publishing.publications.maven
}


